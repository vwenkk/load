// Code generated by goctl. DO NOT EDIT.
// Source: load.proto

package loadclient

import (
	"context"

	"github.com/vwenkk/load/rpc/types/load"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseIDResp   = load.BaseIDResp
	BaseResp     = load.BaseResp
	BaseUUIDResp = load.BaseUUIDResp
	Empty        = load.Empty
	IDReq        = load.IDReq
	IDsReq       = load.IDsReq
	PageInfoReq  = load.PageInfoReq
	UUIDReq      = load.UUIDReq
	UUIDsReq     = load.UUIDsReq

	Load interface {
		InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error)
	}

	defaultLoad struct {
		cli zrpc.Client
	}
)

func NewLoad(cli zrpc.Client) Load {
	return &defaultLoad{
		cli: cli,
	}
}

func (m *defaultLoad) InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error) {
	client := load.NewLoadClient(m.cli.Conn())
	return client.InitDatabase(ctx, in, opts...)
}
